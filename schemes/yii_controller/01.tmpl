{% if($model->getIsAbstract()): %}
{% message('Error: Abstract models is not supported') %}
{% else: %}
{% open_file('controllers/'.$model->getName().'Controller.php') %}
<?php

class {%= $model->getName() %}Controller extends {%= env('controllerClass', 'CController') %} 
{
	public function action{%= ucfirst(env('indexAction', 'index')) %}()
	{
		$model = new {%= $model->getName() %}('search');
		$model->unsetAttributes();
		if (isset($_GET['{%= $model->getName() %}'])) {
			$model->attributes = $_GET['{%= $model->getName() %}'];
		}
		$provider = $model->search();
		$this->render('{%= env('indexAction', 'index') %}', array(
			'model' => $model,
			'provider' => $provider,
		));
	}
	
	public function actionCreate()
	{
		$model = new {%= $model->getName() %}('create');
		// Uncomment to enable ajax validation
		// $this->performAjaxValidation($model);
		if (isset($_POST['{%= $model->getName() %}'])) {
			$model->attributes = $_POST['{%= $model->getName() %}'];
			if ($model->save()) {
				$this->redirect(array('view', 'id' => $model->id));
			}
		}
		$this->render('create', array(
			'model' => $model,
		));
	}
	
	public function actionUpdate($id)
	{
		$model = $this->loadModel($id);
		// Uncomment to enable ajax validation
		// $this->performAjaxValidation($model);
		if (isset($_POST['{%= $model->getName() %}'])) {
			$model->attributes = $_POST['{%= $model->getName() %}'];
			if ($model->save()) {
				$this->redirect(array('view', 'id' => $model->id));
			}
		}
		$this->render('update', array(
			'model' => $model,
		));
	}
	
	public function actionDelete($id)
	{
		$this->loadModel($id)->delete();
		if(!isset($_GET['ajax'])) {
			$this->redirect(isset($_POST['returnUrl']) ? $_POST['returnUrl'] : array('{%= env('indexAction', 'index') %}'));
		}
	}
	
	public function actionView($id)
	{
		$this->render('view', array(
			'model' => $this->loadModel($id),
		));
	}
	
	public function loadModel($id)
	{
		$model = {%= $model->getName() %}::model()->findByPk($id);
		if($model===null) {
			throw new CHttpException(404, 'The requested page does not exist.');
		}
		return $model;
	}
	
	public function performAjaxValidation($model)
	{
		if(isset($_POST['ajax']) && $_POST['ajax']==='{%= strtolower($model->getName()) %}-form') {
			echo CActiveForm::validate($model);
			Yii::app()->end();
		}
	}
	
	public function filters()
	{
		return array(
			'postOnly + delete', 
		);
	}
}
{% close_file() %}
{% endif %}
