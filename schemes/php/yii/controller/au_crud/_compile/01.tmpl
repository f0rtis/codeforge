{% open_file('protected/controllers/'.$model->getName().'Controller.php') %}<?php

class {%= $model->getName() %}Controller extends {%= env('php.yii.controller.superclass', 'Controller') %}
{

    public function __construct($id, $module = null)
    {
        parent::__construct($id, $module);
        $this->related_model = {%= $model->getName() %}::class;
    }

    public function filters()
    {
        return ['accessControl', 'postOnly + delete'];
    }

    public function accessRules()
    {
        return [
            ['allow', 'actions' => ['create'], 'roles' => ['{%= permission('create', $model) %}']],
            ['allow', 'actions' => ['view'], 'roles' => ['{%= permission('view', $model) %}']],
            ['allow', 'actions' => ['admin'], 'roles' => ['{%= permission('manage', $model) %}']],
            ['allow', 'actions' => ['update'], 'roles' => ['{%= permission('update', $model) %}']],
            ['allow', 'actions' => ['delete'], 'roles' => ['{%= permission('delete', $model) %}']],
            ['allow', 'actions' => ['csv'], 'roles' => ['{%= permission('csv', $model) %}']],
            ['allow', 'actions' => ['print'], 'roles' => ['{%= permission('print', $model) %}']],
            ['deny'],
        ];
    }

    public function actionCreate()
    {
        $model = new {%= $model->getName() %}('create');
        if ($this->saveModel($model)) {
            Yii::app()->user->setFlash('success', "The form was created successfully.");
            if ($model->currentUserCanAccess()) {
                $this->redirect(['view', 'id' => $model->id]);
            } else {
                $this->refresh();
            }
        }
        $this->render('create', compact('model'));
    }

	public function actionAdmin()
	{
		$this->baseAdmin('admin');
	}
	
	public function actionUpdate($id)
	{
		$model = $this->loadModel($id);
        if (!$model->currentUserCanUpdate()) {
            throw new CHttpException(403, 'Forbidden.');
        }

		if ($this->saveModel($model)) {
			$this->redirect(['view', 'id' => $model->id]);
		}
		$this->render('update', compact('model'));
	}

	public function actionEdit($id, $stage)
    {
        $model = $this->loadModel($id);
        if (!$model->currentUserCanEdit($stage)) {
            throw new CHttpException(403, 'Forbidden');
        }
        $model->active_stage = $stage;
        $model->amend_mode = true;
        if ($this->saveModel($model)) {
            $this->redirect(['view', 'id' => $model->id]);
        }
        $this->render('amend', compact('model'));
    }

    public function actionPrint($id)
    {
        $model = $this->loadModel($id);
        $this->renderPdf('print', sprintf('{%= $model->getName() %}: %s', $model->id), compact('model'), '{%= lcfirst($model->getName()) %}-'.$id.'.pdf');
    }
}
{% close_file() %}
